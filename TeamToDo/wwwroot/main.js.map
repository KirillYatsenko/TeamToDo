{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/login-form/login-form.component.css","webpack:///./src/app/account/login-form/login-form.component.html","webpack:///./src/app/account/login-form/login-form.component.ts","webpack:///./src/app/account/registration-form/registration-form.component.css","webpack:///./src/app/account/registration-form/registration-form.component.html","webpack:///./src/app/account/registration-form/registration-form.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/guards/AuthGuard.ts","webpack:///./src/app/shared/models/Todo.ts","webpack:///./src/app/shared/models/TodoList.ts","webpack:///./src/app/shared/models/TodoUser.ts","webpack:///./src/app/shared/request-options-helper.ts","webpack:///./src/app/shared/services/account.service.ts","webpack:///./src/app/shared/services/config.service.ts","webpack:///./src/app/shared/services/invitation.service.ts","webpack:///./src/app/shared/services/todo.service.ts","webpack:///./src/app/shared/services/todolist.service.ts","webpack:///./src/app/todo/todolist/delete-list-modal/delete-list-modal.component.css","webpack:///./src/app/todo/todolist/delete-list-modal/delete-list-modal.component.html","webpack:///./src/app/todo/todolist/delete-list-modal/delete-list-modal.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/body/add-todo-form/add-todo-form.component.css","webpack:///./src/app/todo/todolist/details-list-modal/body/add-todo-form/add-todo-form.component.html","webpack:///./src/app/todo/todolist/details-list-modal/body/add-todo-form/add-todo-form.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/body/body.component.css","webpack:///./src/app/todo/todolist/details-list-modal/body/body.component.html","webpack:///./src/app/todo/todolist/details-list-modal/body/body.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/body/tabs/tabs.component.css","webpack:///./src/app/todo/todolist/details-list-modal/body/tabs/tabs.component.html","webpack:///./src/app/todo/todolist/details-list-modal/body/tabs/tabs.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/body/todos/todos.component.css","webpack:///./src/app/todo/todolist/details-list-modal/body/todos/todos.component.html","webpack:///./src/app/todo/todolist/details-list-modal/body/todos/todos.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/details-list-modal.component.css","webpack:///./src/app/todo/todolist/details-list-modal/details-list-modal.component.html","webpack:///./src/app/todo/todolist/details-list-modal/details-list-modal.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/header/header.component.css","webpack:///./src/app/todo/todolist/details-list-modal/header/header.component.html","webpack:///./src/app/todo/todolist/details-list-modal/header/header.component.ts","webpack:///./src/app/todo/todolist/details-list-modal/invitation-modal/invitation-modal.component.css","webpack:///./src/app/todo/todolist/details-list-modal/invitation-modal/invitation-modal.component.html","webpack:///./src/app/todo/todolist/details-list-modal/invitation-modal/invitation-modal.component.ts","webpack:///./src/app/todo/todolist/invitation/invitation.component.css","webpack:///./src/app/todo/todolist/invitation/invitation.component.html","webpack:///./src/app/todo/todolist/invitation/invitation.component.ts","webpack:///./src/app/todo/todolist/navbar/navbar.component.css","webpack:///./src/app/todo/todolist/navbar/navbar.component.html","webpack:///./src/app/todo/todolist/navbar/navbar.component.ts","webpack:///./src/app/todo/todolist/todolist.component.css","webpack:///./src/app/todo/todolist/todolist.component.html","webpack:///./src/app/todo/todolist/todolist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n<div style=\\\"margin-top:10%;\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\"></div>\\r\\n                <div class=\\\"col-md-4 new-user-alert\\\">\\r\\n                    <div *ngIf=\\\"brandNew\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n                        <strong>All set!</strong> Please login with your account\\r\\n                    </div>  \\r\\n                </div>\\r\\n        </div>\\r\\n              \\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\"></div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                        <h2 style=\\\"text-align: center\\\">Sign In</h2>        \\r\\n\\r\\n                    <form #loginForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"login()\\\">\\r\\n                        \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"email\\\">email</label>\\r\\n                          <input id=\\\"email\\\" type=\\\"text\\\" required name=\\\"email\\\" \\r\\n                          class=\\\"form-control\\\"\\r\\n                           [(ngModel)]=\\\"credentials.email\\\"\\r\\n                           #email=\\\"ngModel\\\">\\r\\n                        </div>\\r\\n              \\r\\n                        <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\r\\n                        class=\\\"alert alert-danger\\\">\\r\\n                          <div *ngIf=\\\"email.errors.required\\\">\\r\\n                              email is required.\\r\\n                          </div>\\r\\n                      </div>\\r\\n              \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"password\\\">password</label>\\r\\n                          <input type=\\\"password\\\"\\r\\n                           class=\\\"form-control\\\" id=\\\"password\\\"\\r\\n                            required name=\\\"password\\\" \\r\\n                            [(ngModel)] = \\\"credentials.password\\\"\\r\\n                            #password=\\\"ngModel\\\">\\r\\n                        </div>  \\r\\n              \\r\\n                        <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\r\\n                        class=\\\"alert alert-danger\\\">\\r\\n                          <div *ngIf=\\\"password.errors.required\\\">\\r\\n                              password is required.\\r\\n                          </div>\\r\\n                      </div>\\r\\n                        \\r\\n              \\r\\n                      <div style=\\\"text-align: center\\\">\\r\\n                        <button style=\\\"width: 40%;\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"loginForm.invalid\\\">Sign in</button>\\r\\n                            <br/> <small  routerLink='/registration' class=\\\"font-weight-light sign-in-up-btn\\\">Sign up</small>\\r\\n                      </div>\\r\\n              \\r\\n                          <!-- <div style=\\\"text-align: center;\\\" class=\\\"form-group\\\">\\r\\n                            <button routerLink='/registration' type=\\\"submit\\\" class=\\\"btn btn-success\\\">Registration</button>\\r\\n                         </div> -->\\r\\n\\r\\n                        <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\">\\r\\n                                {{errors}}\\r\\n                              </div> \\r\\n              \\r\\n                      </form>\\r\\n                 </div>\\r\\n              </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit,OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport {Credentials} from '../../shared/models/Credentials';\r\nimport { AccountService } from '../../shared/services/account.service';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  private subscription: Subscription;\r\n\r\n   brandNew: boolean;\r\n   errors: string;\r\n   isRequesting: boolean;\r\n   submitted: boolean = false;\r\n   credentials: Credentials = {email: '', password: ''};\r\n   redirectingUrl:string;\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, private accountService: AccountService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.activatedRoute.queryParams.subscribe(\r\n      (param: any)=>{\r\n          this.brandNew = param['brandNew'];\r\n          this.credentials.email = param['email'];\r\n          this.redirectingUrl = param['redirectingUrl'];\r\n      }\r\n    );\r\n\r\n    let self = this;\r\n    $(document).keypress(function(e) {\r\n      if(e.which == 13) {\r\n          self.login();\r\n      }\r\n  });\r\n\r\n  }\r\n  \r\n  login(){\r\n    this.accountService.login(this.credentials.email,this.credentials.password).pipe(\r\n      finalize(()=>this.isRequesting = false)\r\n    )\r\n      .subscribe(result=>\r\n      {\r\n        if(result){\r\n            if(this.redirectingUrl){\r\n              window.location.href =this.redirectingUrl;\r\n            }else{\r\n              this.router.navigate(['/todolists'])\r\n            }\r\n        } \r\n      },\r\n    \r\n      errors => {\r\n                this.errors = errors[\"error\"];\r\n                this.brandNew = false;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" style=\\\"border: 2px solid black; height: 300px;\\\"></div>\\r\\n    <div class=\\\"col-md-8\\\" style=\\\"border: 2px solid black; height: 300px;\\\"></div>\\r\\n  </div> -->\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top:10%;\\\">\\r\\n\\r\\n  <div class=\\\"col-md-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n          <h2 style=\\\"text-align: center\\\">Sign Up</h2>\\r\\n          <form  #registrationForm = \\\"ngForm\\\" (ngSubmit)=\\\"registerUser()\\\" (keypress.enter)=\\\"registerUser()\\\">\\r\\n        \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"username\\\">username</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"\\r\\n               required\\r\\n              [(ngModel)]=\\\"user.username\\\"\\r\\n              name=\\\"username\\\"\\r\\n              #username=\\\"ngModel\\\">\\r\\n            </div>\\r\\n        \\r\\n            <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"username.errors.required\\\">\\r\\n                Username is required.\\r\\n              </div>\\r\\n            </div>\\r\\n        \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"email\\\">email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" \\r\\n              required\\r\\n              [(ngModel)]=\\\"user.email\\\"\\r\\n              name=\\\"email\\\"\\r\\n              #email=\\\"ngModel\\\"\\r\\n              ngModel email>\\r\\n            </div>\\r\\n        \\r\\n            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"email.errors.required\\\">\\r\\n                Email is required.\\r\\n              </div>\\r\\n              <div *ngIf=\\\"email.errors.email\\\">\\r\\n                  Not correct email format\\r\\n              </div>\\r\\n          </div>\\r\\n        \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"username\\\">password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\r\\n               required minlength=\\\"6\\\"\\r\\n               [(ngModel)]=\\\"user.password\\\"\\r\\n               name=\\\"password\\\"\\r\\n               #password=\\\"ngModel\\\">\\r\\n            </div>\\r\\n        \\r\\n            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"password.errors.required\\\">\\r\\n                Password is required.\\r\\n              </div>\\r\\n              <div *ngIf=\\\"password.errors.minlength\\\">\\r\\n                Password must be at least 6 characters long.\\r\\n              </div>\\r\\n            </div>\\r\\n           \\r\\n            <div style=\\\"text-align: center\\\">\\r\\n                <button style=\\\"width: 40%;\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"registrationForm.invalid\\\">Sign up</button>\\r\\n                    <br/> <small  routerLink='/login' class=\\\"font-weight-light sign-in-up-btn\\\">Sign in</small>\\r\\n              </div>\\r\\n        \\r\\n            <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\">\\r\\n             {{errors}}\\r\\n            </div>      \\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '../../shared/services/account.service';\nimport {UserRegistration} from '../../shared/models/userregistration';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.css']\n})\nexport class RegistrationFormComponent implements OnInit {\n  \n  errors: string;  \n  isRequesting: boolean;\n  submitted: boolean = false;\n\n  constructor(private registrationService : AccountService, private router : Router) { }\n\n  user: UserRegistration = {username: \"\", password: \"\", email: \"\"};\n\n  ngOnInit(){}\n\n  registerUser() {\n    let valid = true;\n    this.submitted = true;\n    this.isRequesting = true;\n    this.errors='';\n      if(valid)\n      {\n          this.registrationService.register(this.user.email, this.user.username,this.user.password)\n          .pipe(\n            finalize(()=>this.isRequesting = false)\n          )\n            .subscribe(\n              result  => {\n                if(result){\n                  this.router.navigate(['/login'],{queryParams: {brandNew: true,email:this.user.email}});                         \n              }\n            },\n              errors => {\n                let errorDescription = errors[\"error\"];\n                this.errors = errorDescription;\n              })\n      }      \n    }\n } \n\n \n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {RegistrationFormComponent} from './account/registration-form/registration-form.component';\nimport { LoginFormComponent } from './account/login-form/login-form.component';\nimport {AuthGuard} from './shared/guards/AuthGuard';\nimport { TodolistComponent } from './todo/todolist/todolist.component';\nimport { InvitationComponent } from './todo/todolist/invitation/invitation.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/todolists', pathMatch: 'full', canActivate: [AuthGuard] },\n  { path: 'todolists', component: TodolistComponent, canActivate: [AuthGuard]},\n  { path: 'registration', component: RegistrationFormComponent },\n  { path: 'login', component: LoginFormComponent},\n  { path: 'invitation', component: InvitationComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports:[RouterModule],\n  providers: [AuthGuard]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {RegistrationFormComponent} from './account/registration-form/registration-form.component';\nimport { LoginFormComponent } from './account/login-form/login-form.component';\nimport { TodolistComponent } from './todo/todolist/todolist.component';\nimport { DeleteListModalComponent } from './todo/todolist/delete-list-modal/delete-list-modal.component';\nimport { DetailsListModalComponent } from './todo/todolist/details-list-modal/details-list-modal.component';\nimport { InvitationComponent } from './todo/todolist/invitation/invitation.component';\nimport { HeaderComponent } from './todo/todolist/details-list-modal/header/header.component';\nimport { BodyComponent } from './todo/todolist/details-list-modal/body/body.component';\nimport { AddTodoFormComponent } from './todo/todolist/details-list-modal/body/add-todo-form/add-todo-form.component';\nimport { TodosComponent } from './todo/todolist/details-list-modal/body/todos/todos.component';\nimport { TabsComponent } from './todo/todolist/details-list-modal/body/tabs/tabs.component';\nimport { InvitationModalComponent } from './todo/todolist/details-list-modal/invitation-modal/invitation-modal.component';\nimport { NavbarComponent } from './todo/todolist/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationFormComponent,\n    LoginFormComponent,\n    TodolistComponent,\n    DeleteListModalComponent,\n    DetailsListModalComponent,\n    InvitationComponent,\n    HeaderComponent,\n    BodyComponent,\n    AddTodoFormComponent,\n    TodosComponent,\n    TabsComponent,\n    InvitationModalComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRoute, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AccountService } from '../services/account.service';\r\nimport { Subscription } from 'rxjs';\r\nimport {Observable} from 'rxjs';    \r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private user: AccountService,private router: Router) {}\r\n\r\n  private subscription: Subscription;\r\n\r\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n  \r\n    let tokenValidation = await this.user.validateToken();\r\n\r\n    if(!this.user.isLoggedIn() || !tokenValidation)\r\n    {\r\n      let url = state.url;\r\n      this.router.navigate(['/login'],{queryParams: {redirectingUrl:url}});                         \r\n       return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}","import { TodoUser } from \"./TodoUser\";\r\n\r\nexport class Todo{\r\n    id: string;\r\n    creatorId:string;\r\n    assigneeId: string;\r\n    text:string;\r\n    important: boolean = false;\r\n    listId:string;\r\n    completedBy: TodoUser;\r\n    creator: TodoUser;\r\n    assignee: TodoUser;\r\n    showChecked: boolean = false;\r\n}","import { TodoUser } from \"./TodoUser\";\r\nimport { Todo } from \"./Todo\";\r\n\r\nexport class TodoList{\r\n      id : string = \"\";\r\n      title: string = \"\";\r\n      created: string = \"\";\r\n      admin: TodoUser[] = [];\r\n      todos: Todo[] = [];\r\n      members: TodoUser[] = [];\r\n      creator:TodoUser;\r\n      todosCount: number = 0;\r\n\r\n      userIsMember:boolean;\r\n}","export class TodoUser{\r\n    id: string;\r\n    userName: string;\r\n    email: string;\r\n}","import { HttpHeaders } from \"@angular/common/http\";\r\n\r\nconst token = localStorage.getItem('auth_token');\r\n\r\nexport const bareHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\nexport const authorizationHeaders =  new HttpHeaders(\r\n    { 'Content-Type': 'application/json'\r\n    , 'Authorization': `Bearer ${token}` }\r\n)\r\n\r\nexport const responseTextAuthorizationOptions: any = {\r\n    responseType:\"text\",\r\n    headers:authorizationHeaders\r\n}\r\n\r\nexport const responseTextOptions: any =  {\r\n    responseType:'text',\r\n    headers:bareHeaders\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Response, Headers, RequestOptions, ResponseOptions, ResponseType } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport {UserRegistration} from '../models/userregistration';\nimport {ConfigService} from './config.service';\nimport {map, catchError} from 'rxjs/operators';\nimport { TodoUser } from '../models/TodoUser';\nimport {bareHeaders, authorizationHeaders,responseTextAuthorizationOptions,responseTextOptions } from '../request-options-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient, private configService : ConfigService) {\n    this.baseUri = configService.getApiURI();\n   }\n\n   ngOnit(){ }\n\n  private registrationUri = \"/account/registration\";\n  private loginUri = \"/account/login\";\n  private baseUri;\n\n  register(email: string, username:string, password: string) : Observable<any> {\n    let body = JSON.stringify({username,password,email});\n    let url = this.baseUri + this.registrationUri;\n    \n    return this.http.post(url,body,responseTextOptions);\n  }\n\n  login(email:string, password: string) : Observable<any>{\n    let body = JSON.stringify({email,password});\n    let url = this.baseUri + this.loginUri;\n\n    return this.http.post(url,body,\n     {\n      responseType:\"text\",\n      headers:bareHeaders\n    }).pipe(\n      map(result => {\n        let token = JSON.parse(result).token;\n        localStorage.setItem('auth_token',token);\n        return true;\n      })\n    )\n  }\n\n  isLoggedIn() : boolean{\n    return !!localStorage.getItem('auth_token');\n  }\n\n  async validateToken(){\n    let url = this.baseUri + '/account/ValidateToken';\n\n    return await this.http.get(url,responseTextAuthorizationOptions).toPromise().catch(x=>{\n        return false;\n    })\n    \n  }\n\n  getCurrentUser() :Observable<TodoUser>{\n    let url = this.baseUri + '/account/GetCurrentUser';\n    \n    return this.http.get<TodoUser>(url,{\n      headers: authorizationHeaders\n    });\n  }\n\n \n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  private _apiURI  : string;\r\n\r\n  constructor() { \r\n    this._apiURI = environment.apiUrl;\r\n  }\r\n\r\n  getApiURI(){\r\n    return this._apiURI;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ConfigService } from './config.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvitationService {\n\n  constructor(private http: HttpClient, private configServcie: ConfigService) { \n    this.baseInviteLink = window.location.origin +'/invitation';\n  }\n\n  baseInviteLink: string;\n\n  generateInvitationLink(id: string) : Observable<string>{\n    let url = this.configServcie.getApiURI() + '/Invitation/GenerateInvitationHash'\n    let authToken = localStorage.getItem('auth_token');\n\n    return this.http.post<string>(url, `\"${id}\"`,\n      {\n        headers:new HttpHeaders(\n          { 'Content-Type': 'application/json'\n          , 'Authorization': `Bearer ${authToken}` }\n        )\n      }\n    ).pipe(\n      map(result=>{\n        return this.baseInviteLink + `?id=${result}`;\n      })\n    )\n  }\n\n  acceptInvitation(id: string) : Observable<string>{\n    let url = this.configServcie.getApiURI()+'/Invitation/AcceptInvitation';\n    return this.http.post(url,`\"${id}\"`,  {\n      responseType:\"text\",\n      headers:new HttpHeaders(\n       { 'Content-Type': 'application/json'\n        , 'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n       }\n      )\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Response, Headers, RequestOptions, ResponseOptions, ResponseType } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport {ConfigService} from './config.service';\nimport {map, catchError} from 'rxjs/operators';\nimport { Todo } from '../models/Todo';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  baseUri:string;\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n    this.baseUri = configService.getApiURI();\n   }\n\n   headers:HttpHeaders = new HttpHeaders(\n    { 'Content-Type': 'application/json'\n     , 'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n    }\n   )\n\n  getTodos(listId: string) : Observable<Todo[]>{\n\n    let url = this.baseUri+`/todo/${listId}`;\n    let authToken = localStorage.getItem('auth_token');\n\n    return this.http.get<Todo[]>(url,\n      {\n        headers:new HttpHeaders(\n          { 'Content-Type': 'application/json'\n          , 'Authorization': `Bearer ${authToken}` }\n        )\n      }\n    )\n  }\n\n  addTodo(todo: Todo) : Observable<Todo>{\n    let url = this.baseUri+'/todo/AddTodo';\n    let authToken = localStorage.getItem('auth_token');\n\n    let body = JSON.stringify(todo);\n\n    return this.http.post<Todo>(url,body,{\n      headers:new HttpHeaders(\n        { 'Content-Type': 'application/json'\n        , 'Authorization': `Bearer ${authToken}` }\n      )\n    });\n  }\n\n  deleteTodo(id: string) : Observable<boolean>{\n    let url = this.baseUri+`/todo/${id}`;\n    let authToken = localStorage.getItem('auth_token');\n\n    return this.http.delete(url,{\n      responseType:\"text\",\n      headers: this.headers\n    }).pipe(\n      map(result=>{\n        return true;\n      })\n    )\n  }\n\n  completeTodo(id: string) : Observable<boolean>{\n    let url = this.baseUri+'/todo/CompleteTodo';\n    let authToken = localStorage.getItem('auth_token');\n\n    return this.http.post(url,id,{\n      responseType:\"text\",\n      headers:new HttpHeaders(\n        { 'Content-Type': 'application/json'\n        , 'Authorization': `Bearer ${authToken}` }\n      )\n    }).pipe(\n      map(result=>{\n        return true;\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Response, Headers, RequestOptions, ResponseOptions, ResponseType } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport {ConfigService} from './config.service';\nimport {map, catchError} from 'rxjs/operators';\nimport { Todo } from '../models/Todo';\nimport { TodoList } from '../models/TodoList';\nimport { Body } from '@angular/http/src/body';\nimport { UrlHandlingStrategy } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodolistService {\n\n  baseUri:string;\n\n  options = {\n    headers:new HttpHeaders(\n     { 'Content-Type': 'application/json'\n      , 'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n     }\n    )\n  }\n\n  constructor(private http: HttpClient, private configService: ConfigService) {\n    this.baseUri = configService.getApiURI();\n   }\n\n  getLists() : Observable<TodoList[]>{\n    let url = this.baseUri+'/todolist';\n\n    return this.http.get<TodoList[]>(url,this.options);\n  }\n\n  getList(id: string) : Observable<TodoList>{\n    let url = this.baseUri+`/todolist/${id}`;\n\n    return this.http.get<TodoList>(url,this.options);\n  }\n\n  addList(title: string) : Observable<TodoList>{\n     let url = this.baseUri+'/todolist';\n\n    return this.http.post<TodoList>(url,`\"${title}\"`,{\n      headers:new HttpHeaders(\n       { 'Content-Type': 'application/json'\n        , 'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n       }\n      )\n    } );\n  }\n\n  deleteList(id: string) : Observable<boolean>{\n    let url = this.baseUri+`/todolist/${id}`;\n\n    return this.http.delete(url,\n      {\n      responseType:\"text\",\n      headers:new HttpHeaders(\n       { 'Content-Type': 'application/json'\n        , 'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n       }\n      )\n    }).pipe(\n      map(result=>{\n        return true;\n      })\n    )\n  }\n\n  leaveGroup(id: string): Observable<boolean>{\n    let url = this.baseUri + `/todolist/leavegroup/${id}`;\n    \n    return this.http.delete(url,\n      {\n      responseType:\"text\",\n      headers:new HttpHeaders(\n       { 'Content-Type': 'application/json'\n        , 'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n       }\n      )\n    }).pipe(\n      map(x=>\n        {\n          return true;\n        }\n      )\n    )\n\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n  <div class=\\\"modal fade\\\" id=\\\"confirmationDialog\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Delete</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            Are you sure you want to delete <strong>{{todoList.title}}</strong> ?\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"  data-dismiss=\\\"modal\\\" (click)=\\\"confirmDeletion(todoList.id)\\\">Delete</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit,Input } from '@angular/core';\nimport { TodoList } from '../../../shared/models/TodoList';\nimport { TodolistComponent } from '../todolist.component';\nimport { $ } from 'protractor';\n\n@Component({\n  selector: 'app-delete-list-modal',\n  templateUrl: './delete-list-modal.component.html',\n  styleUrls: ['./delete-list-modal.component.css']\n})\n\n\nexport class DeleteListModalComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() todoList: TodoList = new TodoList();\n  @Input() deleteComponent: TodolistComponent;\n\n  ngOnInit() {\n  }\n\n  confirmDeletion(id: string){\n   \n    this.deleteComponent.confirmDeletion(id);\n  }\n\n}\n","module.exports = \".selected-important{\\r\\n    background-color: green;\\r\\n    color: white;\\r\\n}\"","module.exports = \"<form #todoForm=\\\"ngForm\\\" class=\\\"green-border\\\">\\r\\n  <div class=\\\"input-group mb-3\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <button [disabled]=\\\"!todoForm.valid\\\" (click)=\\\"Modal.addTodo()\\\" class=\\\"btn btn-outline-secondary green-border green-hover\\\" type=\\\"button\\\">Add</button>\\r\\n      </div>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control green-border\\\" placeholder=\\\"new todo\\\"\\r\\n       aria-label=\\\"\\\" aria-describedby=\\\"basic-addon1\\\"\\r\\n       required name=\\\"text\\\" \\r\\n       [(ngModel)]=\\\"Modal.todo.text\\\"\\r\\n       (keyup.enter)=\\\"Modal.addTodo()\\\">\\r\\n      <div class=\\\"input-group-append green-border\\\">\\r\\n            <button  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Important?\\\" (click)=\\\"changeImportant()\\\" [ngClass]=\\\"{'selected-important':this.Modal.todo.important}\\\" class=\\\"btn btn-outline-secondary green-border green-hover\\\" type=\\\"button\\\">\\r\\n               <i class=\\\"far fa-star\\\"></i>\\r\\n             </button>\\r\\n          <button id=\\\"member-dropdown\\\" class=\\\"btn btn-default btn-outline-secondary dropdown-toggle green-border green-hover\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" style=\\\"color:green\\\">\\r\\n          </button>\\r\\n          <div class=\\\"dropdown-menu\\\">\\r\\n              <span class=\\\"dropdown-item\\\" (click)=\\\"Modal.selectCurrentUser()\\\" >Me</span>\\r\\n              <span class=\\\"dropdown-item\\\" (click)=\\\"Modal.selectAllMembers()\\\" >All</span>\\r\\n              <div role=\\\"separator\\\" class=\\\"dropdown-divider\\\"></div>\\r\\n              <span *ngFor=\\\"let member of Modal.dropdownMembers\\\" class=\\\"dropdown-item\\\" (click)=\\\"Modal.selectMember(member)\\\" >{{member.userName}}</span>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TodolistComponent } from '../../../todolist.component';\nimport { DetailsListModalComponent } from '../../details-list-modal.component';\n\n@Component({\n  selector: 'app-add-todo-form',\n  templateUrl: './add-todo-form.component.html',\n  styleUrls: ['./add-todo-form.component.css']\n})\nexport class AddTodoFormComponent implements OnInit {\n\n  @Input() Modal: DetailsListModalComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  \n  changeImportant(){\n    this.Modal.todo.important=!this.Modal.todo.important;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-add-todo-form [Modal]=\\\"this.Modal\\\"></app-add-todo-form>\\n<app-tabs [Modal]=\\\"this.Modal\\\" ></app-tabs>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TodolistComponent } from '../../todolist.component';\nimport { DetailsListModalComponent } from '../details-list-modal.component';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\nexport class BodyComponent implements OnInit {\n\n  @Input() Modal: DetailsListModalComponent;\n  \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link active\\\" id=\\\"todo-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#todo\\\" role=\\\"tab\\\" aria-controls=\\\"todos\\\" aria-selected=\\\"true\\\">Todos</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a (click)=\\\"removeNotification()\\\" class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">Done\\n      <span *ngIf=\\\"this.Modal.unreadDoneTodos\\\" style=\\\"margin-left: 5px; color:green !important;\\\" class=\\\"badge badge-light\\\"><strong>!</strong></span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\n  <div class=\\\"tab-pane fade show active\\\" id=\\\"todo\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"todo-tab\\\">\\n    <div *ngIf=\\\"this.Modal?.importantTodos.length>0 || this.Modal?.todos.length>0; else notodos\\\">\\n        <app-todos [Modal]=\\\"this.Modal\\\" [Todos]=\\\"this.Modal.importantTodos\\\"></app-todos>\\n        <app-todos [Modal]=\\\"this.Modal\\\" [Todos]=\\\"this.Modal.todos\\\"></app-todos>\\n    </div>\\n    <ng-template #notodos>\\n      <div style=\\\"margin-top:5%;\\\">\\n          <h5>You don't have any todos. Rest or add new ones!</h5>\\n      </div>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"tab-pane fade\\\" id=\\\"profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"profile-tab\\\">\\n      <app-todos [Modal]=\\\"this.Modal\\\" [Todos]=\\\"this.Modal.doneTodos\\\"></app-todos>\\n  </div>\\n</div>\"","import { Component, OnInit,Input } from '@angular/core';\nimport { DetailsListModalComponent } from '../../details-list-modal.component';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  @Input() Modal: DetailsListModalComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  removeNotification(){\n    this.Modal.unreadDoneTodos = false;\n  }\n\n}\n","module.exports = \".margin-right-5{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.custom-list-group-item{\\r\\n    padding: 5px !important;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"Modal.listComponent.selectedList\\\">\\n\\n    <div class=\\\"list-group\\\">\\n              <button (click)=\\\"Modal.finishTodo(todo.id)\\\" [disabled]=\\\"todo.assignee && (todo.assignee?.id != Modal.currentUser.id)\\\"\\n               *ngFor=\\\"let todo of Todos\\\" href=\\\"#\\\" \\n               class=\\\"list-group-item list-group-item-action custom-list-group-item\\\"\\n               data-toggle=\\\"tooltip\\\"\\n               data-placement=\\\"top\\\"\\n               [attr.title]=\\\"todo.completedBy&&!todo.assignee ? createCompletedTooltip(todo) : null\\\"\\n               >\\n                    <h5>\\n                          <i *ngIf=\\\"!todo.completedBy; else completed\\\" class=\\\"far fa-square margin-right-5\\\" ></i>\\n                          <ng-template #completed>\\n                              <i class=\\\"far fa-check-square margin-right-5\\\"></i>\\n                          </ng-template>\\n                        \\n                          <i *ngIf=\\\"todo.important\\\" class=\\\"fas fa-star\\\" style=\\\"color:#f4e842\\\"></i>\\n                          <span *ngIf=\\\"!todo.assignee; else assignee\\\" class=\\\"badge badge-success\\\">All</span>\\n                          <ng-template #assignee>\\n                              <ng-container *ngIf=\\\"todo.assignee?.id == Modal.currentUser.id; else another\\\" >\\n                                      <span  class=\\\"badge badge-danger\\\">Me</span>\\n                              </ng-container>\\n                          </ng-template>\\n                          <ng-template #another>\\n                                  <span class=\\\"badge badge-info\\\">{{todo.assignee?.userName}}</span>\\n                          </ng-template>\\n                          {{todo.text}}\\n\\n                            <span *ngIf=\\\"todo.creator.id == Modal.currentUser.id && !todo.completedBy\\\" \\n                              (click)=\\\"Modal.deleteTodo(todo)\\\" class=\\\"delete-btn align-middle\\\"><i class=\\\"fas fa-trash\\\"></i></span>\\n                    </h5>\\n\\n                    <!-- (Modal.listComponent.selectedList?.admin.some(x=>x.id == Modal.currentUser.id)) -->\\n                    <!-- (todo.creator.id == Modal.currentUser.id) ||  -->\\n                </button>\\n    </div>\\n</div>\\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport { DetailsListModalComponent } from '../../details-list-modal.component';\nimport { Todo } from '../../../../../shared/models/Todo';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n\n  @Input() Todos: Todo[];\n  @Input() Modal: DetailsListModalComponent;\n\n  showChecked:boolean = false;\n\n  constructor() {\n   }\n\n  ngOnInit() {\n   \n    // $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  createCompletedTooltip(todo: Todo): string{\n    return `completed by ${todo.completedBy.userName}`;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n    <div id=\\\"modal-details\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                  <app-header [Modal]=\\\"this\\\"></app-header>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <app-body [Modal]=\\\"this\\\"></app-body>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <app-invitation-modal [InvitationLink]=\\\"this.invitationLink\\\"></app-invitation-modal>\\n    \\n    \\n\"","import { Component, OnInit, Input, NgZone, ChangeDetectorRef } from '@angular/core';\r\nimport { TodoList } from '../../../shared/models/TodoList';\r\nimport { TodolistComponent } from '../todolist.component';\r\nimport { AccountService } from '../../../shared/services/account.service';\r\nimport { TodoUser } from '../../../shared/models/TodoUser';\r\nimport { TodolistService } from '../../../shared/services/todolist.service';\r\nimport { InvitationService } from '../../../shared/services/invitation.service';\r\nimport { TodoService } from '../../../shared/services/todo.service';\r\nimport { Todo } from '../../../shared/models/Todo';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-details-list-modal',\r\n  templateUrl: './details-list-modal.component.html',\r\n  styleUrls: ['./details-list-modal.component.css']\r\n})\r\nexport class DetailsListModalComponent implements OnInit {\r\n\r\n  constructor(private accountService : AccountService,\r\n              private todoListService: TodolistService,\r\n              private invitationService: InvitationService,\r\n              private todoService: TodoService,\r\n              private changeDetector: ChangeDetectorRef){}\r\n\r\n  @Input() listComponent: TodolistComponent;\r\n  @Input() currentUser: TodoUser;\r\n  \r\n  private MODAL_ID = \"modal-details\";\r\n  private MEMBER_DROPDOWN_ID = \"member-dropdown\";\r\n  private INVITATION_MODAL_ID = \"modal-invitation-link\";\r\n\r\n  invitationLink: string;\r\n  errors: string;\r\n  dropdownMembers: TodoUser[] = [];\r\n  selectedMember: TodoUser;\r\n  todo: Todo = new Todo();\r\n\r\n  importantTodos: Todo[] = [];\r\n  todos: Todo[] = [];\r\n  doneTodos: Todo[];\r\n  todoDeletionRequet:boolean = false;\r\n  unreadDoneTodos: boolean = false;\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setData(){\r\n      this.todo = new Todo();\r\n      this.loadTodos();\r\n      this.loadDropdownMembers();\r\n      this.selectCurrentUser();\r\n  }\r\n\r\n   loadTodos(){\r\n      this.todoService.getTodos(this.listComponent.selectedList.id)\r\n        .subscribe(result=>{\r\n          this.listComponent.selectedList.todos = result;\r\n          this.importantTodos = result.filter(x=>!x.completedBy && x.important);\r\n          this.todos = result.filter(x=>!x.completedBy && !x.important);\r\n          this.doneTodos = result.filter(x=>x.completedBy);\r\n        })\r\n   }\r\n\r\n   loadDropdownMembers(){\r\n    let cloned = this.listComponent.selectedList.members.map(x => Object.assign({}, x));\r\n    let clonedCurrentUser = this.listComponent.selectedList.members.findIndex(x=>x.id == this.currentUser.id);\r\n    cloned.splice(clonedCurrentUser,1);\r\n\r\n    this.dropdownMembers = cloned;\r\n  }\r\n\r\n  selectAllMembers(){\r\n    this.selectedMember = null;\r\n    $(`#${this.MEMBER_DROPDOWN_ID}`).html(\"All\");\r\n  }\r\n\r\n  selectCurrentUser(){\r\n    this.selectedMember = this.currentUser;\r\n    $(`#${this.MEMBER_DROPDOWN_ID}`).html(\"Me\");\r\n  }\r\n\r\n  selectMember(member: TodoUser){\r\n    this.selectedMember = member;\r\n    $(`#${this.MEMBER_DROPDOWN_ID}`).html(this.selectedMember.userName);\r\n  }\r\n\r\n  addMember(id: string){\r\n    this.invitationService.generateInvitationLink(id)\r\n      .subscribe(\r\n        result => {\r\n          this.invitationLink = result;\r\n        },\r\n        errors=>{\r\n          this.errors = errors;\r\n        }\r\n      )\r\n\r\n    $(`#${this.MODAL_ID}`).modal(\"hide\");\r\n    $(`#${this.INVITATION_MODAL_ID}`).modal(\"show\");\r\n   }\r\n\r\n   addTodo(){\r\n\r\n      if(!this.todo.text || this.todo.text.length == 0){\r\n        return;\r\n      }\r\n\r\n      if(this.selectedMember){\r\n        this.todo.assigneeId = this.selectedMember.id;\r\n      }\r\n      this.todo.listId = this.listComponent.selectedList.id;\r\n\r\n      this.todoService.addTodo(this.todo)\r\n        .subscribe(\r\n          result=>{\r\n            if(result.important){\r\n              this.importantTodos.push(result);\r\n            }else{\r\n              this.todos.push(result);\r\n            }\r\n            \r\n            this.todo=new Todo();\r\n           this.listComponent.selectedList.todosCount+=1;\r\n          }\r\n        );\r\n   }\r\n\r\n   deleteTodo(todo: Todo){\r\n    this.todoDeletionRequet = true;\r\n\r\n    this.todoService.deleteTodo(todo.id)\r\n      .subscribe(\r\n        result=>{\r\n          \r\n          if(result){\r\n\r\n            let todos = this.todos;\r\n\r\n            if(todo.important){\r\n              todos = this.importantTodos;\r\n            }\r\n\r\n            todos.splice(\r\n              todos.findIndex(x=>x.id == todo.id),1\r\n            )\r\n          }\r\n\r\n          this.todoDeletionRequet = false;\r\n          this.listComponent.selectedList.todosCount-=1;\r\n\r\n        }\r\n      );\r\n   }\r\n\r\n   finishTodo(id: string){\r\n\r\n    if(this.todoDeletionRequet){\r\n      return;\r\n    }\r\n\r\n    if(this.doneTodos.find(x=>x.id == id)){\r\n      return;\r\n    }\r\n\r\n     this.todoService.completeTodo(id)\r\n       .subscribe(result=>{\r\n\r\n         if(result){\r\n\r\n          let todos : Todo[];\r\n          todos = this.todos;\r\n\r\n           let index = todos.findIndex(x=>x.id == id)\r\n           if(index == -1){\r\n            todos = this.importantTodos;\r\n            index = todos.findIndex(x=>x.id == id)\r\n           }\r\n\r\n           todos[index].completedBy = this.currentUser;\r\n\r\n           this.doneTodos.push(\r\n            todos[index]\r\n           )\r\n\r\n           todos.splice(index,1);\r\n\r\n           this.unreadDoneTodos = true;\r\n           this.listComponent.selectedList.todosCount-=1;\r\n         }\r\n\r\n       })\r\n   }\r\n\r\n  leaveGroup(id: string){\r\n    this.todoListService.leaveGroup(id)\r\n      .subscribe(\r\n        result=>{\r\n          if(result){\r\n           $(`#${this.MODAL_ID}`).modal(\"hide\");\r\n            this.listComponent.deleteFromModel(id);\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n}\r\n","module.exports = \".invitation-button{\\r\\n    margin-left: 3px; \\r\\n    width: 30px;\\r\\n     border: 2px solid #6c757d; \\r\\n     background-color: white; \\r\\n     color: #6c757d;\\r\\n}\\r\\n\\r\\n.invitation-button:hover{\\r\\n    margin-left: 3px; \\r\\n    width: 30px;\\r\\n     border: 2px solid white ; \\r\\n     background-color: green; \\r\\n     color: white;\\r\\n     cursor: pointer;\\r\\n}\\r\\n\\r\\n.dropdown-toggle::after {\\r\\n    display:none;\\r\\n}\\r\\n\\r\\n.settings{\\r\\n    position: absolute;\\r\\n    top:7%;\\r\\n    right:4%;\\r\\n}\\r\\n\\r\\n.settings:hover{\\r\\n    position: absolute;\\r\\n    top:7%;\\r\\n    right:4%;\\r\\n    color:green;\\r\\n    cursor:pointer;\\r\\n}\"","module.exports = \"<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><strong>{{Modal.listComponent.selectedList?.title}}</strong> </h5>\\r\\n\\r\\n<div>\\r\\n    <span *ngIf=\\\"Modal.dropdownMembers.length>0; else nomembers\\\">\\r\\n        Members:\\r\\n            <span style=\\\"margin-left: 3px;\\\"\\r\\n            *ngFor=\\\"let member of Modal.dropdownMembers; let i = index\\\" class=\\\"badge badge-{{selectBadgeType(i)}}\\\">{{member?.userName}}</span>\\r\\n    </span>\\r\\n        <ng-template #nomembers>\\r\\n            Not members yet. You can invite them! ->\\r\\n        </ng-template>\\r\\n\\r\\n        <span  class=\\\"badge badge-success invitation-button\\\"\\r\\n        data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Invite friends\\\"\\r\\n         (click)=\\\"Modal.addMember(Modal.listComponent.selectedList.id)\\\"><strong>+</strong></span>\\r\\n\\r\\n         <div class=\\\"dropdown settings\\\">\\r\\n           <i class=\\\"fas fa-ellipsis-v fa-lg dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"  aria-expanded=\\\"false\\\"></i>\\r\\n            <div class=\\\"dropdown-menu\\\">\\r\\n              <button (click)=\\\"Modal.addMember(Modal.listComponent.selectedList.id)\\\" class=\\\"dropdown-item\\\">Invite friends</button>\\r\\n              <button (click)=\\\"Modal.leaveGroup(Modal.listComponent.selectedList.id)\\\" class=\\\"dropdown-item\\\" >Leave group</button>\\r\\n            </div>\\r\\n          </div>\\r\\n</div>\\r\\n\\r\\n   \\r\\n\\r\\n\\r\\n  \"","import { Component, OnInit, Input } from '@angular/core';\nimport { TodoUser } from '../../../../shared/models/TodoUser';\nimport { TodoList } from '../../../../shared/models/TodoList';\nimport { DetailsListModalComponent } from '../details-list-modal.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() Modal: DetailsListModalComponent;\n  \n  BadgeTypes: string[] = ['primary','secondary','success','danger','warning','info','light','dark'];\n  BadgeTypeIndex: number = 0;\n\n  selectBadgeType(index: number) : string{\n    if(index <= this.BadgeTypes.length){\n      return this.BadgeTypes[index];\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"modal-invitation-link\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n              <h3>Send this link to a friend</h3>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            {{InvitationLink}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation-modal',\n  templateUrl: './invitation-modal.component.html',\n  styleUrls: ['./invitation-modal.component.css']\n})\nexport class InvitationModalComponent implements OnInit {\n\n  @Input() InvitationLink : string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div *ngIf=\\\"errors\\\">\\n        <h1 style=\\\"color:red\\\">{{errors}}</h1>\\n      </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { InvitationService } from '../../../shared/services/invitation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-invitation',\n  templateUrl: './invitation.component.html',\n  styleUrls: ['./invitation.component.css']\n})\nexport class InvitationComponent implements OnInit {\n\n  private subscription: Subscription;\n  private id: string;\n  errors: string;\n\n  constructor(private activatedRoute: ActivatedRoute,\n  private invitationService: InvitationService,\n  private router : Router) { }\n\n  ngOnInit() {\n    this.subscription = this.activatedRoute.queryParams.subscribe(\n      (param: any)=>{\n          this.id = param['id'];\n      }\n    );\n\n   this.invitationService.acceptInvitation(this.id)\n    .subscribe(result=>{\n      if(result){\n        this.router.navigate(['/todolists'],{queryParams: {open: result}});                         \n      }\n    },errors=>{\n      this.errors = errors[\"error\"];\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light  justify-content-between\\\">\\n    <a class=\\\"navbar-brand\\\">Team todos</a>\\n    <form class=\\\"form-inline\\\">\\n        <span style=\\\"margin-right: 5px;\\\" class=\\\"navbar-text\\\">\\n            <i class=\\\"fas fa-user-circle\\\" style=\\\"margin-right: 5px;\\\"></i>{{UserName}}\\n          </span>\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n    </form>\\n</nav>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  @Input() UserName: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    localStorage.removeItem('auth_token');\n    this.router.navigate(['/login']);\n  }\n}\n","module.exports = \"\\r\\n.todolist:hover{\\r\\n    cursor: pointer;\\r\\n    background-color: #f8f9fa;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <app-navbar [UserName]=\\\"currentUser?.userName\\\"></app-navbar>\\r\\n\\r\\n  <!-- Button to Open the Modal -->\\r\\n<!-- <h1>User: {{currentUser?.email}}</h1> -->\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-2\\\"></div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n\\r\\n      <div class=\\\"row\\\"  style=\\\"margin: 3%\\\">\\r\\n          <div class=\\\"col-md-2\\\"> </div>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n              <input (keydown.enter)=\\\"addList(title.value)\\\" style=\\\"text-align: center;\\\" class=\\\"form-control\\\" #title placeholder=\\\"Todo list\\\" />\\r\\n              <div style=\\\"text-align: center; margin-top: 10px;\\\">\\r\\n                  <button style=\\\"width: 30%;\\\"  class=\\\"btn btn-success\\\" (click)=\\\"addList(title.value); title.value=''\\\">\\r\\n                      Add \\r\\n                    </button> \\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      \\r\\n        \\r\\n        <div *ngIf=\\\"TodoLists.length; else notodolists\\\">\\r\\n          <div class=\\\"lists\\\" *ngFor=\\\"let todolist of TodoLists\\\" style=\\\"margin-top:2%;\\\">\\r\\n              <div class=\\\"card todolist\\\" (click)=\\\"openTodolist(todolist.id) \\\">\\r\\n                  <h5 class=\\\"card-header\\\">\\r\\n                     <span class=\\\"list-title\\\">\\r\\n                      <strong> {{todolist.title}}</strong> </span>\\r\\n                     <span *ngIf=\\\"todolist.creator.id == currentUser.id\\\"\\r\\n                     (click)=\\\"deleteListRequest(todolist.id)\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#confirmationDialog\\\" class=\\\"delete-btn align-middle\\\"><i class=\\\"fas fa-trash\\\"></i></span>\\r\\n                  </h5>\\r\\n                  <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\r\\n                     <div *ngIf=\\\"todolist.todosCount>0; else notodos\\\">\\r\\n                        <h5>You have {{todolist.todosCount}} uncompleted todos.</h5>\\r\\n                     </div>\\r\\n                     <ng-template #notodos>\\r\\n                            <h5>Click there to add new todos!</h5>\\r\\n                      </ng-template>\\r\\n                  </div>\\r\\n                  <!-- <button *ngIf=\\\"todolist.creator.id == currentUser.id\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteListRequest(todolist.id)\\\"\\r\\n                  data-toggle=\\\"modal\\\" data-target=\\\"#confirmationDialog\\\">Delete</button> -->\\r\\n                </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <ng-template #notodolists>\\r\\n          <div style=\\\"text-align: center; margin-top: 30%\\\">\\r\\n              <h4>You don't have any Todo lists. Start by adding them. </h4>\\r\\n          </div>\\r\\n        </ng-template> \\r\\n  </div>\\r\\n  </div>\\r\\n</div> \\r\\n\\r\\n\\r\\n<app-details-list-modal [currentUser]=\\\"currentUser\\\" [listComponent]=\\\"this\\\"></app-details-list-modal>\\r\\n<app-delete-list-modal [todoList]=\\\"todoListDeleteRequest\\\" [deleteComponent]=\\\"this\\\"></app-delete-list-modal>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { TodolistService } from '../../shared/services/todolist.service';\r\nimport { TodoList } from '../../shared/models/TodoList';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AccountService } from '../../shared/services/account.service';\r\nimport { TodoUser } from '../../shared/models/TodoUser';\r\nimport { DetailsListModalComponent } from './details-list-modal/details-list-modal.component';\r\ndeclare var $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-todolist',\r\n  templateUrl: './todolist.component.html',\r\n  styleUrls: ['./todolist.component.css']\r\n})\r\nexport class TodolistComponent implements AfterViewInit {\r\n\r\n  private subscription: Subscription;\r\n\r\n  @ViewChild(DetailsListModalComponent)\r\n  private detailsComponent: DetailsListModalComponent;\r\n\r\n  TodoLists: TodoList[] = [];\r\n  currentUser: TodoUser;\r\n  selectedList: TodoList;\r\n\r\n  errors: string;\r\n  open: string;\r\n  todoListDeleteRequest: TodoList = new TodoList();\r\n  todoListDeleteRequestProcessing: boolean = false;\r\n\r\n  constructor( private todolistService: TodolistService,  \r\n    private activatedRoute: ActivatedRoute,\r\n    private accountService: AccountService){}\r\n\r\n  ngOnInit() {\r\n\r\n    let self = this;\r\n    $('#confirmationDialog').on('hide.bs.modal', function (e) {\r\n      self.todoListDeleteRequestProcessing = false;\r\n    })\r\n\r\n    $('body').tooltip({\r\n      selector: '[data-toggle=tooltip]'\r\n     });\r\n\r\n    this.subscription = this.activatedRoute.queryParams.subscribe(\r\n      (param: any)=>{\r\n          this.open = param['open'];\r\n      }\r\n    );\r\n\r\n    this.loadLists();\r\n\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    console.log('gogogo');\r\n  }\r\n\r\n  loadCurrentUser(){\r\n    this.accountService.getCurrentUser()\r\n      .subscribe(\r\n        result=>{\r\n          this.currentUser = result;\r\n        },\r\n        errors =>{\r\n          this.errors = errors;\r\n        }\r\n      )\r\n  }\r\n\r\n  loadLists(){\r\n    this.todolistService.getLists()\r\n    .subscribe(result=>{\r\n      this.TodoLists = result.sort((x,y)=>{\r\n          if(x.created<y.created){\r\n            return 1;\r\n          }\r\n          if(x.created>y.created){\r\n            return -1;\r\n          }\r\n          if(x.created == y.created){\r\n            return 0;\r\n          }\r\n      });\r\n\r\n      if(this.open){\r\n        this.selectList(this.open);\r\n        this.detailsComponent.setData();\r\n        $(\"#modal-details\").modal(\"show\");\r\n      }\r\n\r\n    },\r\n    errors=>{\r\n      this.errors = errors;\r\n    });\r\n  }\r\n\r\n  addList(title: string){\r\n\r\n    if(!title || title.length==0){\r\n      return;\r\n    }\r\n\r\n    this.todolistService.addList(title)\r\n      .subscribe(result=> {\r\n        this.TodoLists.unshift(result);\r\n        this.selectList(result.id);\r\n        $(\"#modal-details\").modal(\"show\");\r\n      },errors=>{\r\n        this.errors = errors;\r\n      });\r\n  }\r\n\r\n\r\n  selectList(id: string){\r\n    if(this.todoListDeleteRequestProcessing){\r\n      return;\r\n    }\r\n      this.selectedList = this.TodoLists.find(x=>x.id ==id);\r\n  }\r\n\r\n  deleteListRequest(id: string){\r\n    this.todoListDeleteRequestProcessing = true;\r\n    this.todoListDeleteRequest = this.TodoLists.find(x=>x.id == id);\r\n  }\r\n\r\n  confirmDeletion(id: string){\r\n    this.todolistService.deleteList(id)\r\n    .subscribe(result=> {\r\n      if(result){\r\n       this.deleteFromModel(id);\r\n       this.todoListDeleteRequestProcessing = false;\r\n      }\r\n    },errors=>{\r\n      this.errors = errors;\r\n    });\r\n  }\r\n\r\n  deleteFromModel(id:string){\r\n      let index = this.TodoLists.findIndex(x=>x.id == id);\r\n      this.TodoLists.splice(index,1);\r\n  }\r\n\r\n  openTodolist(id: string){\r\n    if(this.todoListDeleteRequestProcessing){\r\n      return;\r\n    }\r\n\r\n    this.selectList(id);\r\n    this.detailsComponent.setData();\r\n    this.openDetailsDialog();\r\n  }\r\n\r\n  openDetailsDialog(){\r\n    $('#modal-details').modal('show');\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:5000/api\"\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}